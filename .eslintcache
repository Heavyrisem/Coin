[{"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\index.js":"1","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\reportWebVitals.js":"2","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Main.js":"3","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\Master.js":"4","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Header.js":"5","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Unitchanger.js":"6","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Login.js":"7","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Trade.js":"8","C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\LeaderBoard.js":"9","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\index.js":"10","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\Master.js":"11","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\reportWebVitals.js":"12","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Header.js":"13","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Login.js":"14","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Main.js":"15","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Unitchanger.js":"16","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Trade.js":"17","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\LeaderBoard.js":"18"},{"size":515,"mtime":1608033775792,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":8404,"mtime":1608436665133,"results":"22","hashOfConfig":"20"},{"size":2120,"mtime":1608288262096,"results":"23","hashOfConfig":"20"},{"size":575,"mtime":1608300565415,"results":"24","hashOfConfig":"20"},{"size":961,"mtime":1608277229789,"results":"25","hashOfConfig":"20"},{"size":4474,"mtime":1608293084242,"results":"26","hashOfConfig":"20"},{"size":6081,"mtime":1608279521530,"results":"27","hashOfConfig":"20"},{"size":1264,"mtime":1608437154623,"results":"28","hashOfConfig":"20"},{"size":515,"mtime":1608033775792,"results":"29","hashOfConfig":"30"},{"size":2120,"mtime":1608288262096,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":575,"mtime":1608300565415,"results":"33","hashOfConfig":"30"},{"size":4609,"mtime":1608438856208,"results":"34","hashOfConfig":"30"},{"size":8485,"mtime":1608451971230,"results":"35","hashOfConfig":"30"},{"size":1028,"mtime":1608448082681,"results":"36","hashOfConfig":"30"},{"size":6081,"mtime":1608279521530,"results":"37","hashOfConfig":"30"},{"size":2429,"mtime":1608451904043,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxxyw3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"y2kv4q",{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\index.js",[],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\reportWebVitals.js",[],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Main.js",["79","80","81","82","83","84","85","86","87","88"],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\Master.js",["89","90","91","92"],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Header.js",[],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Unitchanger.js",["93","94","95"],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Login.js",["96","97","98"],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\Trade.js",["99","100","101","102"],"C:\\Users\\insu\\Desktop\\Develop\\jg\\src\\js\\LeaderBoard.js",[],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\index.js",[],["103","104"],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\Master.js",["105","106","107","108"],"import React from 'react';\r\nimport './style/Master.css';\r\n\r\nimport Header from './js/Header';\r\nimport Main from './js/Main';\r\nimport Login from './js/Login';\r\n\r\nimport {serverAddress} from './Config.json';\r\n\r\nclass Master extends React.Component {\r\n    state = {\r\n        showLoginPanel: false,\r\n        userID: undefined,\r\n        userCoinBalance: 0,\r\n        userCoinBalance: 0\r\n    }\r\n\r\n    showLoginPanel(e) {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            showLoginPanel: true\r\n        });\r\n    }\r\n    hideLoginPanel() {\r\n        this.setState({\r\n            showLoginPanel: false\r\n        });\r\n    }\r\n\r\n    onLogin(userID) {\r\n        this.setState({\r\n            userID: userID\r\n        });\r\n        // cookie\r\n    }\r\n\r\n\r\n\r\n    async CheckUserStatus() {\r\n        if (this.userID == undefined) return;\r\n        let ServerResponse = await fetch(`${serverAddress}/getBalance`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: this.state.userID\r\n            }),\r\n            headers: {'Context-type': 'application/json'}\r\n        });\r\n        ServerResponse = await ServerResponse.json();\r\n\r\n        if (ServerResponse.CoinBalance != undefined) this.SetBalance(ServerResponse.CoinBalance, ServerResponse.MoneyBalance);\r\n    }\r\n\r\n    SetBalance(Coin, Money) {\r\n        this.setState({\r\n            userCoinBalance: parseInt(Coin),\r\n            userMoneyBalance: parseInt(Money)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Master\">\r\n                {(this.state.userID==undefined&&this.state.showLoginPanel)&& <Login show={this.showLoginPanel.bind(this)} hide={this.hideLoginPanel.bind()} onSuccess={this.onLogin.bind(this)} SetBalance={this.SetBalance.bind(this)}/>}\r\n                <Header showLoginPanel={this.showLoginPanel.bind(this)} hideLoginPanel={this.hideLoginPanel.bind(this)}  userInfo={this.state}/>\r\n                <Main hideLoginPanel={this.hideLoginPanel.bind(this)} userInfo={this.state} SetBalance={this.SetBalance.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Master;","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\reportWebVitals.js",[],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Header.js",[],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Login.js",["109","110","111","112","113"],"import React from 'react';\r\nimport '../style/Login.css';\r\n\r\nimport {serverAddress} from '../Config.json';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        ServerResponse: undefined,\r\n        register: false\r\n    }\r\n\r\n    async requestLogin() {\r\n        let ServerResponse = await fetch(`${serverAddress}/login`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                    id: this.id.value,\r\n                    passwd: this.passwd.value\r\n                }),\r\n            headers: {\r\n                    'content-type': 'application/json'\r\n            }\r\n        });\r\n        \r\n        ServerResponse = await ServerResponse.json();\r\n        \r\n        if (ServerResponse.id) {\r\n            this.props.onSuccess(ServerResponse.id);\r\n            this.props.SetBalance(ServerResponse.CoinBalance, ServerResponse.MoneyBalance);\r\n        }\r\n        else\r\n            this.setState({\r\n                ServerResponse: ServerResponse.msg\r\n            })\r\n            // alert(\"로그인에 실패하였습니다\");\r\n    }\r\n\r\n    async requestRegister() {\r\n        if (!this.id.value || !this.passwd.value) return this.setState({ServerResponse: \"아이디와 비밀번호는 공백일 수 없습니다.\"});\r\n        let ServerResponse = await fetch(`${serverAddress}/register`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id: this.id.value,\r\n                passwd: this.passwd.value\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n        ServerResponse = await ServerResponse.json();\r\n\r\n        if (ServerResponse.id) {\r\n            this.requestLogin();\r\n        } else {\r\n            this.setState({\r\n                ServerResponse: ServerResponse.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Id = (\r\n            <span onClickCapture={e=>{e.stopPropagation();this.setState({register: true, ServerResponse: undefined})}}>\r\n                존재하지 않는 사용자 입니다. 여기를 클릭하여 생성하세요\r\n            </span>\r\n        );\r\n        const Passwd = (\r\n            <span>\r\n                비밀번호가 틀립니다.\r\n            </span>\r\n        );\r\n        const UserExists = (\r\n            <span>\r\n                이미 존재하는 사용자 입니다.\r\n            </span>\r\n        )\r\n\r\n        if (this.state.register) {\r\n            return(\r\n                <div className=\"Login\">\r\n                    <span className=\"LoginTitle\">계정 생성</span>\r\n                    <input type=\"text\" className=\"LoginInputValue\" ref={(e) => this.id = e} placeholder=\"ID\" />\r\n                    <input type=\"password\" className=\"LoginInputValue\" ref={(e) => this.passwd = e} onKeyPress={e=>{if(e.key == \"Enter\") this.requestRegister()}} placeholder=\"PW\" />\r\n                    <span className=\"ServerResponse\">{\r\n                        (this.state.ServerResponse)&&\r\n                        (this.state.ServerResponse == \"USER_EXISTS\")? UserExists :\r\n                        this.state.ServerResponse\r\n                    }</span>\r\n                    <div className=\"LoginSubmit\" onClick={this.requestRegister.bind(this)}>계정 생성</div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"Login\">\r\n                    <span className=\"LoginTitle\">로그인</span>\r\n                    <input type=\"text\" className=\"LoginInputValue\" ref={(e) => this.id = e} placeholder=\"ID\" />\r\n                    <input type=\"password\" className=\"LoginInputValue\" ref={(e) => this.passwd = e} onKeyPress={e=>{if(e.key == \"Enter\") this.requestLogin()}} placeholder=\"PW\" />\r\n                    <span className=\"ServerResponse\">{\r\n                        (this.state.ServerResponse)&&\r\n                        (this.state.ServerResponse == \"NO_USER\")? Id :\r\n                        (this.state.ServerResponse == \"WRONG_PASSWD\")? Passwd :\r\n                        this.state.ServerResponse\r\n                    }</span>\r\n                    <div className=\"LoginBtns\">\r\n                        <button style={{color: 'rgb(146, 146, 146)', backgroundColor: 'rgb(231, 231, 231)'}} className=\"LoginSubmit\" onClick={e=>{e.stopPropagation();this.setState({register: true, ServerResponse: undefined})}}>계정 생성</button>\r\n                        <button className=\"LoginSubmit\" onClick={this.requestLogin.bind(this)}>로그인</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Login;\r\n","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Main.js",["114","115","116","117","118","119","120","121","122","123"],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Unitchanger.js",["124","125","126"],"C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\Trade.js",["127","128","129","130"],"import React from 'react';\r\nimport '../style/Trade.css';\r\n\r\nimport unit from './Unitchanger';\r\nimport {serverAddress} from '../Config.json';\r\n\r\nclass Trade extends React.Component {\r\n\r\n    state = {\r\n        calculatedValue: undefined,\r\n        message: undefined\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.InputValue = {\r\n            value: 0\r\n        }\r\n    }\r\n\r\n    stopEventBubble(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    async Buy(e) {\r\n        this.stopEventBubble(e);\r\n        if (this.InputValue.value < 1) return;\r\n        console.log(this.props.userInfo.userID, this.InputValue.value)\r\n        let ServerResponse = await fetch(`${serverAddress}/buy`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id: this.props.userInfo.userID,\r\n                Amount: this.InputValue.value\r\n            }),\r\n            headers: {'Content-type': 'application/json'}\r\n        });\r\n        ServerResponse = await ServerResponse.json();\r\n\r\n        if (ServerResponse.CoinBalance != undefined) {\r\n            this.props.SetBalance(ServerResponse.CoinBalance, ServerResponse.MoneyBalance);\r\n            this.props.Close();\r\n        } else {\r\n            switch(ServerResponse.msg) {\r\n                case \"MONEY_NOT_ENOUGH\": {\r\n                    this.setState({\r\n                        message: \"화폐가 부족합니다.\"\r\n                    });\r\n                    break;\r\n                }\r\n                case \"USER_NOT_FOUNT\": {\r\n                    this.setState({\r\n                        message: \"알수없는 사용자 입니다.\"\r\n                    })\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.setState({\r\n                        message: ServerResponse.msg\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    async Sell(e) {\r\n        this.stopEventBubble(e);\r\n        if (this.InputValue.value < 1) return;\r\n        console.log(this.props.userInfo.userID, this.InputValue.value)\r\n        let ServerResponse = await fetch(`${serverAddress}/sell`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                id: this.props.userInfo.userID,\r\n                Amount: this.InputValue.value\r\n            }),\r\n            headers: {'Content-type': 'application/json'}\r\n        });\r\n        ServerResponse = await ServerResponse.json();\r\n\r\n        if (ServerResponse.CoinBalance != undefined) {\r\n            this.props.SetBalance(ServerResponse.CoinBalance, ServerResponse.MoneyBalance);\r\n            this.props.Close();\r\n        } else {\r\n            switch(ServerResponse.msg) {\r\n                case \"COIN_NOT_ENOUGH\": {\r\n                    this.setState({\r\n                        message: \"코인이 부족합니다.\"\r\n                    });\r\n                    break;\r\n                }\r\n                case \"USER_NOT_FOUNT\": {\r\n                    this.setState({\r\n                        message: \"알수없는 사용자 입니다.\"\r\n                    })\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.setState({\r\n                        message: ServerResponse.msg\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    FillMaxSell() {\r\n        this.InputValue.value = this.props.userInfo.userCoinBalance;\r\n    }\r\n\r\n    FillMaxBuy() {\r\n        // console.log(this.props.CoinValue, this.props.userInfo.userMoneyBalance, parseInt(this.props.userInfo.userMoneyBalance/this.props.CoinValue))\r\n        if (this.props.CoinValue > this.props.userInfo.userMoneyBalance) this.InputValue.value = 0;\r\n        else this.InputValue.value = parseInt(this.props.userInfo.userMoneyBalance/this.props.CoinValue);\r\n    }\r\n\r\n    render() {\r\n        const Sell = (\r\n            <> \r\n                <span className=\"Title\">판매</span>\r\n                <input className=\"InputValue\" type=\"number\" ref={e=>{this.InputValue = e}} onChange={()=>{this.setState({message: undefined});console.log(\"close\")}} placeholder=\"판매할 코인의 수를 입력하세요\" />\r\n                <span className=\"CalculatedValue\">{this.state.message? this.state.message : this.InputValue.value? unit.Comma(parseInt(this.InputValue.value) * this.props.CoinValue)+\" KRW\": \"받을 금액 KRW\"} </span>\r\n                <div className=\"TradeBtns\">\r\n                    <div className=\"TradeSubmit\" style={{color: 'rgb(146, 146, 146)', backgroundColor: 'rgb(231, 231, 231)'}} onClickCapture={this.FillMaxSell.bind(this)}>전체 입력</div>\r\n                    <div className=\"TradeSubmit\" onClickCapture={this.Sell.bind(this)}>확인</div>\r\n                </div>\r\n            </>\r\n        );\r\n        const Buy = (\r\n            <> \r\n                <span className=\"Title\">구매</span>\r\n                <input className=\"InputValue\" type=\"number\" ref={e=>{this.InputValue = e}} onChange={()=>{this.setState({message: undefined});console.log(\"close\")}} placeholder=\"구매할 코인의 수를 입력하세요\" />\r\n                <span className=\"CalculatedValue\">{this.state.message? this.state.message : (this.InputValue.value)? unit.Comma(parseInt(this.InputValue.value) * this.props.CoinValue)+\" KRW\": \"지불될 금액 KRW\"} </span>\r\n                <div className=\"TradeBtns\">\r\n                    <div className=\"TradeSubmit\" style={{color: 'rgb(146, 146, 146)', backgroundColor: 'rgb(231, 231, 231)'}} onClickCapture={this.FillMaxBuy.bind(this)}>전체 입력</div>\r\n                    <div className=\"TradeSubmit\" onClickCapture={this.Buy.bind(this)}>확인</div>\r\n                </div>\r\n            </>\r\n        );\r\n        const Error = <span>Error</span>;\r\n\r\n        return(\r\n            <div className=\"TradeMenu\" onClick={this.stopEventBubble}>\r\n                {\r\n                    (this.props.type == \"Sell\")? Sell :\r\n                    (this.props.type == \"Buy\")? Buy :\r\n                    Error\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Trade;","C:\\Users\\insu\\Desktop\\Develop\\JG\\src\\js\\LeaderBoard.js",["131","132","133","134"],{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":98,"column":5,"nodeType":"141","endLine":98,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":116,"column":5,"nodeType":"141","endLine":116,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":148,"column":7,"nodeType":"141","endLine":148,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":163,"column":5,"nodeType":"141","endLine":163,"endColumn":57},{"ruleId":"142","severity":1,"message":"143","line":200,"column":31,"nodeType":"144","messageId":"145","endLine":200,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":235,"column":42,"nodeType":"144","messageId":"145","endLine":235,"endColumn":44},{"ruleId":"142","severity":1,"message":"143","line":243,"column":37,"nodeType":"144","messageId":"145","endLine":243,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":255,"column":60,"nodeType":"144","messageId":"145","endLine":255,"endColumn":62},{"ruleId":"142","severity":1,"message":"143","line":260,"column":59,"nodeType":"144","messageId":"145","endLine":260,"endColumn":61},{"ruleId":"146","severity":1,"message":"147","line":15,"column":9,"nodeType":"148","messageId":"145","endLine":15,"endColumn":24},{"ruleId":"142","severity":1,"message":"149","line":40,"column":25,"nodeType":"144","messageId":"145","endLine":40,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":50,"column":40,"nodeType":"144","messageId":"145","endLine":50,"endColumn":42},{"ruleId":"142","severity":1,"message":"149","line":63,"column":36,"nodeType":"144","messageId":"145","endLine":63,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":3,"column":7,"nodeType":"137","messageId":"152","endLine":3,"endColumn":12},{"ruleId":"142","severity":1,"message":"149","line":8,"column":9,"nodeType":"144","messageId":"145","endLine":8,"endColumn":11},{"ruleId":"142","severity":1,"message":"149","line":19,"column":9,"nodeType":"144","messageId":"145","endLine":19,"endColumn":11},{"ruleId":"142","severity":1,"message":"149","line":85,"column":52,"nodeType":"144","messageId":"145","endLine":85,"endColumn":54},{"ruleId":"142","severity":1,"message":"149","line":99,"column":52,"nodeType":"144","messageId":"145","endLine":99,"endColumn":54},{"ruleId":"142","severity":1,"message":"149","line":100,"column":52,"nodeType":"144","messageId":"145","endLine":100,"endColumn":54},{"ruleId":"142","severity":1,"message":"143","line":40,"column":40,"nodeType":"144","messageId":"145","endLine":40,"endColumn":42},{"ruleId":"142","severity":1,"message":"143","line":81,"column":40,"nodeType":"144","messageId":"145","endLine":81,"endColumn":42},{"ruleId":"142","severity":1,"message":"149","line":145,"column":38,"nodeType":"144","messageId":"145","endLine":145,"endColumn":40},{"ruleId":"142","severity":1,"message":"149","line":146,"column":38,"nodeType":"144","messageId":"145","endLine":146,"endColumn":40},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"146","severity":1,"message":"147","line":15,"column":9,"nodeType":"148","messageId":"145","endLine":15,"endColumn":24},{"ruleId":"142","severity":1,"message":"149","line":40,"column":25,"nodeType":"144","messageId":"145","endLine":40,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":50,"column":40,"nodeType":"144","messageId":"145","endLine":50,"endColumn":42},{"ruleId":"142","severity":1,"message":"149","line":63,"column":36,"nodeType":"144","messageId":"145","endLine":63,"endColumn":38},{"ruleId":"142","severity":1,"message":"149","line":82,"column":126,"nodeType":"144","messageId":"145","endLine":82,"endColumn":128},{"ruleId":"142","severity":1,"message":"149","line":85,"column":52,"nodeType":"144","messageId":"145","endLine":85,"endColumn":54},{"ruleId":"142","severity":1,"message":"149","line":96,"column":126,"nodeType":"144","messageId":"145","endLine":96,"endColumn":128},{"ruleId":"142","severity":1,"message":"149","line":99,"column":52,"nodeType":"144","messageId":"145","endLine":99,"endColumn":54},{"ruleId":"142","severity":1,"message":"149","line":100,"column":52,"nodeType":"144","messageId":"145","endLine":100,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":98,"column":5,"nodeType":"141","endLine":98,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":117,"column":5,"nodeType":"141","endLine":117,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":149,"column":7,"nodeType":"141","endLine":149,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":164,"column":5,"nodeType":"141","endLine":164,"endColumn":57},{"ruleId":"142","severity":1,"message":"143","line":201,"column":31,"nodeType":"144","messageId":"145","endLine":201,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":236,"column":42,"nodeType":"144","messageId":"145","endLine":236,"endColumn":44},{"ruleId":"142","severity":1,"message":"143","line":244,"column":37,"nodeType":"144","messageId":"145","endLine":244,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":256,"column":60,"nodeType":"144","messageId":"145","endLine":256,"endColumn":62},{"ruleId":"142","severity":1,"message":"143","line":261,"column":59,"nodeType":"144","messageId":"145","endLine":261,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":3,"column":7,"nodeType":"137","messageId":"152","endLine":3,"endColumn":12},{"ruleId":"142","severity":1,"message":"149","line":8,"column":9,"nodeType":"144","messageId":"145","endLine":8,"endColumn":11},{"ruleId":"142","severity":1,"message":"149","line":19,"column":9,"nodeType":"144","messageId":"145","endLine":19,"endColumn":11},{"ruleId":"142","severity":1,"message":"143","line":40,"column":40,"nodeType":"144","messageId":"145","endLine":40,"endColumn":42},{"ruleId":"142","severity":1,"message":"143","line":81,"column":40,"nodeType":"144","messageId":"145","endLine":81,"endColumn":42},{"ruleId":"142","severity":1,"message":"149","line":145,"column":38,"nodeType":"144","messageId":"145","endLine":145,"endColumn":40},{"ruleId":"142","severity":1,"message":"149","line":146,"column":38,"nodeType":"144","messageId":"145","endLine":146,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":20,"column":31,"nodeType":"144","messageId":"145","endLine":20,"endColumn":33},{"ruleId":"142","severity":1,"message":"149","line":47,"column":39,"nodeType":"144","messageId":"145","endLine":47,"endColumn":41},{"ruleId":"142","severity":1,"message":"149","line":47,"column":69,"nodeType":"144","messageId":"145","endLine":47,"endColumn":71},{"ruleId":"142","severity":1,"message":"143","line":53,"column":42,"nodeType":"144","messageId":"145","endLine":53,"endColumn":44},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'userCoinBalance'.","ObjectExpression","Expected '===' and instead saw '=='.","no-redeclare","'bytes' is already defined.","redeclared","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-global-assign","no-unsafe-negation"]